{"changed":true,"filter":false,"title":"UserService.js","tooltip":"/app/pitmark/src/services/UserService.js","value":"import gravatar from \"gravatar\";\nimport firebase from \"./firebase\";\n\nclass UserService {\n  constructor() {\n    this.db = firebase.firestore();\n  }\n\n  async createUser(auth) {\n    // 作成したコレクションに合わせてオブジェクトを作成する\n    const user = {\n      authId: auth.uid,\n      name: auth.email.substr(0, auth.email.indexOf(\"@\")),\n      gravatarUrl: gravatar.url(auth.email)\n    };\n    // users コレクションに登録する\n    await this.db.collection(\"users\").add(user);\n    return user;\n  }\n}\n\nconst userService = new UserService();\nexport { userService };\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["import gravatar from \"gravatar\";","import firebase from \"./firebase\";","","class UserService {","  constructor() {","    this.db = firebase.firestore();","  }","","  async createUser(auth) {","    // 作成したコレクションに合わせてオブジェクトを作成する","    const user = {","      authId: auth.uid,","      name: auth.email.substr(0, auth.email.indexOf(\"@\")),","      gravatarUrl: gravatar.url(auth.email)","    };","    // users コレクションに登録する","    await this.db.collection(\"users\").add(user);","    return user;","  }","}","","const userService = new UserService();","export { userService };",""],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":8,"column":26},"end":{"row":8,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1613113249263}